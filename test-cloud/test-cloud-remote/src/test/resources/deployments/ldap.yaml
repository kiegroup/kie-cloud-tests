---
kind: Template
apiVersion: v1
metadata:
  name: ldap
  annotations:
    name: ldap
    description: Application template for ldap server
message: A new ldap server was created

parameters:
- name: APPLICATION_NAME
  displayName: Application Name
  description: The name for the application.
  required: true
- name: LDAP_DOCKER_IMAGE
  displayName: LDAP Docker Image
  description: The LDAP Docker Image URL
  required: true
- name: LDAP_USER_NAME
  displayName: LDAP User Name
  required: true
- name: LDAP_USER_PWD
  displayName: LDAP User Password
  required: true
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "rhba-qe-ldap"
    annotations:
      openshift.io/image.insecureRepository: 'true'
  spec:
    tags:
    - name: 'latest'
      from:
        kind: DockerImage
        name: ${LDAP_DOCKER_IMAGE}
      importPolicy:
        insecure: true
      referencePolicy:
        type: Local
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ldap-user-scripts
  data: 
    addUser.sh: |- 
      ldapadd -h ldap-${APPLICATION_NAME} -p 30389 -x -D cn=Manager,dc=example,dc=com -w admin << EOF
      dn: uid=${LDAP_USER_NAME},ou=people,dc=example,dc=com
      objectClass: top
      objectClass: uidObject
      objectClass: person
      objectClass: inetOrgPerson
      uid: ${LDAP_USER_NAME}
      cn: ${LDAP_USER_NAME}
      sn: ${LDAP_USER_NAME}
      userPassword: ${LDAP_USER_PWD}
      EOF
      ldapmodify -h ldap-${APPLICATION_NAME} -p 30389 -x -D cn=Manager,dc=example,dc=com -w admin << EOF
      dn:cn=kie-server,ou=roles,dc=example,dc=com
      changetype:modify
      add:member
      member:uid=${LDAP_USER_NAME},ou=people,dc=example,dc=com
      EOF
      ldapadd -h ldap-${APPLICATION_NAME} -p 30389 -x -D cn=Manager,dc=example,dc=com -w admin << EOF
      dn: cn=rest-all,ou=roles,dc=example,dc=com
      objectclass: groupOfNames
      objectClass: top
      cn: rest-all
      description: Rest All group
      ou: restall@example.com
      member:uid=${LDAP_USER_NAME},ou=people,dc=example,dc=com
      EOF
      ldapadd -h ldap-${APPLICATION_NAME} -p 30389 -x -D cn=Manager,dc=example,dc=com -w admin << EOF
      dn: cn=admin,ou=roles,dc=example,dc=com
      objectclass: groupOfNames
      objectClass: top
      cn: admin
      description: Admin group
      ou: admins@example.com
      member:uid=${LDAP_USER_NAME},ou=people,dc=example,dc=com
      EOF
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "ldap"
    labels:
      application: "ldap"
  spec:
    strategy:
      type: Recreate
      recreateParams:  
        post: 
          failurePolicy: Abort
          execNewPod:
            containerName: ldap 
            command: [ "/bin/sh", "/opt/scripts/addUser.sh" ] 
            volumes:
              - ldap-user-scripts
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "ldap"
        from:
          kind: ImageStreamTag
          name: "rhba-qe-ldap:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "ldap"
    template:
      metadata:
        name: "ldap"
        labels:
          application: "ldap"
          deploymentConfig: "ldap"
      spec:
        containers:
        - name: "ldap"
          image: "rhba-qe-ldap:latest"
          imagePullPolicy: Always
          volumeMounts:
          - name: ldap-user-scripts
            mountPath: /opt/scripts
          ports:
          - name: "ldap"
            containerPort: 389
            protocol: TCP
          - name: "ldap-tls"
            containerPort: 636
            protocol: TCP
        volumes:
        - name: ldap-user-scripts
          configMap:
            name: ldap-user-scripts
- kind: Service
  apiVersion: v1
  metadata:
    name: "ldap-${APPLICATION_NAME}"
    labels:
      application: "ldap"
  spec:
    ports:
    - name: ldap
      port: 30389
      targetPort: 389
    selector:
      deploymentConfig: "ldap"